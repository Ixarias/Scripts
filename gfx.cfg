// Rhapsody's Performance Config - 3/19/15

// >> KEEP UP TO DATE!
// Read the README.MD file included! It has instructions on how to set up an automatic updater on Windows or Linux so that you can
// keep this config updated automatically, since it changes to be compatible with the new TF2 updates. Alternatively, keep a close
// eye on https://github.com/RhapsodySL/perfconfig and possibly favorite the repo!

//----------------------------------------------------------------------------
// FPS display options
// Show your current FPS or limit your maximum frames to make the game smoother and less jittery.
//----------------------------------------------------------------------------

//cl_showfps 0 									   // Show unsmoothed FPS meter.
//fps_max 0     									   // Set the FPS cap to an amount that you typically max out at to prevent jittering. Should be higher than 60.
//net_graphproportionalfont 0					   // Makes netgraph font size proportional to your screen's current resolution. On smaller displays, it's larger than it needs to be and fills up the scoreboard. Comment or set to 1 if you still want it.
//net_graphpos 0								   // Modify the location of the netgraph. 0 = left edge, 1 = right edge, 2 = centered, 3 or higher specifies the X co-ordinate of the graph's left edge
//net_graphheight 32							   // Modify the height of your netgraph for fine modification.

//----------------------------------------------------------------------------
// Network settings
//
// Whilst net settings perhaps aren't an integral part of an FPS config, they
// are a fact of life in competitive TF2, and as such, they are included here.
//
// A common question I am asked -- what defines whether a good connection is
// good or bad? Mostly personal preference. If you're not willing to make the
// choice, try both and see which is better for you.
//
// Generally, meeting both of the following conditions would classify it as a
// good connection:
//
// - Ping of <80 to the average server you join
// - Generally no/negligible choke/loss (can be checked with `net_graph')
//
// There's some pretty good documentation on this here:
// http://developer.valvesoftware.com/wiki/Source_Multiplayer_Networking
//----------------------------------------------------------------------------

// Good connection
//cl_cmdrate 66
//cl_interp 0
//cl_interp_ratio 1
//cl_lagcompensation 1
//cl_pred_optimize 2
//cl_smooth 0
//cl_smoothtime 0.01
//cl_updaterate 66
//rate 60000

// Comanglia's Good connection
cl_cmdrate 67 // The tricks to get 1.4ms lerp are placebo you're still forced to .0152
cl_interp .033 // change to whatever you like for certain classes projectiles/popping uber/flames = .0152 hitscan = .031 on bad connections = .062
cl_interp_ratio 1
cl_lagcompensation 1
cl_pred_optimize 2
cl_smooth 0
cl_smoothtime 0.01
cl_updaterate 67 // The tricks to get 1.4ms lerp are placebo you're still forced to .0152
rate 60000 // anything above 62,000 is completely useless, anything above 48,000ish is useless in HL

// Bad connection
//cl_cmdrate 40
//cl_interp 0
//cl_interp_ratio 2
//cl_lagcompensation 1
//cl_pred_optimize 2
//cl_smooth 0
//cl_smoothtime 0.01
//cl_updaterate 40
//rate 35000

net_queue_trace 1 // Seems to optimize net code, not sure

//----------------------------------------------------------------------------
// Sprays
// No/negligible performance benefit. Only useful to disable if you're annoyed by them.
//----------------------------------------------------------------------------

cl_playerspraydisable 0 // Set to 1 to disable.
r_spray_lifetime 5      // Set to 0 to disable.

//----------------------------------------------------------------------------
// Shadows
// Shadows can provide a tactical advantage, but at the same time can lower FPS, especially in busy areas.
//----------------------------------------------------------------------------

//mat_shadowstate 0					// Set to 1 to enable.
//r_shadowmaxrendered 0				// Set to 11 to enable.
//r_shadowrendertotexture 0			// Set to 1 to enable, but can cause lag; 0 is the recommended setting either way.
//r_shadows 0						// Set to 1 to enable.
//nb_shadow_dist 400				// Distance from which shadows are visible. Uncomment to modify.

///----------------------------------------------------------------------------
// Facial features
// Disables facial features such as eyes moving and blinking, and mouths opening.
//----------------------------------------------------------------------------

//r_eyes 0 			// Set to 1 to enable.
//r_flex 0 			// Set to 1 to enable.
//r_lod 2 			// Needs to be set to 1, or else facial features will be disabled regardless.
//r_teeth 0 			// Set to 1 to enable.
//mp_usehwmmodels -1  // disables improved facial expressions (problems with multicore, for some reason), added for completeness even though the cvar is technically non-functioning since 3/15/14
//mp_usehwmvcds -1 	// disables improved facial expressions, added for completeness even though the cvar is technically non-functioning since 3/15/14

// Extra settings for if you want to enable facial features but still have a performance benefit. Only uncomment if you have facial features turned on.
//r_eyegloss 0
//r_eyemove 0
//r_eyeshift_x 0
//r_eyeshift_y 0
//r_eyeshift_z 0
//r_eyesize 0
//blink_duration 0 // Default is 0.2

//----------------------------------------------------------------------------
// Ragdolls
// Ragdolls can provide significant FPS loss when interacted with on older computers.
// ----------------------------------------------------------------------------


//cl_ragdoll_fade_time 0			// Sets how long until ragdolls fade, in seconds. Default is 15.
//cl_ragdoll_forcefade 1			// Set to 0 to enable.
//cl_ragdoll_physics_enable 0		// Sets whether bullets, explosives, or attacks will interact with the body. Default is 1.
//g_ragdoll_fadespeed 0			// Sets how fast the fading effect is. Default is 600.
//g_ragdoll_lvfadespeed 0			// Set to 100 to enable. Convar isn't documented.
//ragdoll_sleepaftertime 0		// Set to "5.0f" to enable.

//----------------------------------------------------------------------------
// Gibs
// Gibs spawn if a player is killed by an explosion or has a Bombinomicon equip. These can cause FPS to drop.
//----------------------------------------------------------------------------

//cl_phys_props_enable 0 	    // Disables clientside props being affected by physics. Set to 1 to enable.
//cl_phys_props_max 0 			// Sets the maximum amount of clientside props your client can have at once. Default is 128.
//props_break_max_pieces 0 		// Sets the amount of pieces props can break into. Default is -1 (model default).
//r_propsmaxdist 1				// Sets the maximum visible distance from which you can see clientside props. Default is 1000.
//violence_agibs 0				// Sets whether you can see gibs from the 'alien' team (a convar that likely retained it's name from an older version of TF). Set to 1 to enable.
//violence_hgibs 0				// Sets whether you can see gibs from the 'human' team (a convar that likely retained it's name from an older version of TF). Set to 1 to enable.
cl_burninggibs 0                // Disables burning gibs. Enough of a performance hit with it enabled that it really shouldn't be on either way...

//----------------------------------------------------------------------------
// Audio
// Audio settings generally don't increase performance, but can have a positive effect on stability.
// ----------------------------------------------------------------------------

//dsp_enhance_stereo 0					// Provides you with a neat positional audio effect, but can have a negative effect on performance in some cases.
//dsp_slow_cpu 0							// If set to 1, reduces the quality of DSP effects. Negligible performance gain.
//snd_async_fullyasync 1 					// Runs the audio fully asynchronous, and, for some reason, reduces the number of TDRs (https://forums.geforce.com/default/topic/389688/geforce-drivers/nvidia-statement-on-tdr-errors-display-driver-nvlddmkm-stopped-/)
//snd_pitchquality 1						// Helps determine what to set the audio quality at. More info a few lines down.						
//snd_spatialize_roundrobin 1				// Lowend optimization: if nonzero, spatialize only a fraction of sound channels each frame. 1/2^x of channels will be spatialized
//snd_mixahead 0.05						// Sets how long it takes until attack sounds play. By default the setting is 0.1, or 100ms, which is 1/10 of a second. That means that the current value plays it 50ms after attacking. Sounds usually start to glitch at lower values, so play around with this and see how low you can get!

// dsp_slow_cpu and snd_pitchquality determine what your audio quality is set to in the Options menu.
// High: snd_pitchquality 1; dsp_slow_cpu 0
// Medium: snd_pitchquality 0; dsp_slow_cpu 0
// Low: snd_pitchqualiy 0; dsp_slow_cpu 1
// Note: for snd_pitchqualiy 1; dsp_slow_cpu 1 options menu still displays "Low". I'm not sure if this actually makes the sound quality even lower.

//----------------------------------------------------------------------------
// Graphical
// Main brunt of the config, this is where the magic happens. I've documented what I can so you know what
// everything does and can disable/modify it if you wish.
//----------------------------------------------------------------------------

cl_hud_playerclass_use_playermodel 0 // Potential FPS gain, we'll see after more thorough testing
mat_phong 0							// Disables phonging on all models. Also achieved by enabling DX8. Disables lightwarps. Can make some models appear black.
cl_detaildist 0 					// Distance at which the detailed parts of props are no longer visible (lower LODs)
cl_detailfade 0						// Distance across which detail props fade in
cl_drawmonitors 0					// Disables the rendering of in-game "monitors" which contain 3D rendered images. Mostly unused except maybe in some DR maps
cl_muzzleflash_dlight_1st 0         //
cl_jiggle_bone_framerate_cutoff 0 	// Turns off jigglebones, although I recommend keeping them on at all times by setting them to 1, since their performance impact is generally none/negligible.
cl_new_impact_effects 0				// Disables new impact effects
cl_show_splashes 0					// Disables water splashes
func_break_max_pieces 0				// Undocumented, but probably the same as props_break_max_pieces
glow_outline_effect_enable 0 		// Cart glow effect. Performance loss with this is generally negligible, however, so I recommend enabling it simply because of how useful it is.
lod_transitiondist 0				// Sets how far you have to be from someone to make them go to their next LOD. Setting this to 0 forces the lowest LOD.
mat_antialias 0						// Sets lowest antialiasing value.
mat_bumpmap 0 						// Controls bumpmapping. Apparently it has a weird shine effect if used on dx9, but I'm not seeing it. Set to 1 if you experience it.
mat_colcorrection_disableentities 0 // Disables color-correcting entities.
mat_colorcorrection 0				// Disables color-correction.
mat_disable_bloom 1					// Disables the bloom effect that allows light to reflect off of a surface, and the HDR effect.
mat_disable_fancy_blending 1		// Disables fancy texture blending.
mat_disable_lightwarp 1				// Disables lightwarps, which partially determine shading for players, entities, and the map. mat_phong also does this.
mat_envmapsize 8					// Changes envmap size.
mat_envmaptgasize 8					// Messes around with size of sprayed textures
mat_disable_ps_patch 1              //
mat_filterlightmaps 1				// Filters lightmaps.
mat_filtertextures 1				// Filters textures.
mat_forceaniso 0					// Forces anisotropic filtering level
mat_hdr_level 0						// Sets HDR level.
mat_max_worldmesh_vertices 64		// Not even going to try to guess, sorry. :(
mat_monitorgamma 2.0 				// Controls brightness, try 1.8 to make it brighter or 2.2 to get it darker. Only works in fullscreen.
mat_motion_blur_enabled 0			// Disables motion blur.
mat_parallaxmap 0					// Disables parallax mapping.
mat_mipmaptextures 1				// Control mipmapping
mat_reducefillrate 1				// Reduces the fillrate when the game is run in DX8.
mat_reduceparticles 1				// Reduces particle count.
mat_softwarelighting 0              // Disables rendering of lights by the software.
mat_autoexposure_max 0              //
mat_autoexposure_min 0              //
mat_alphacoverage 0                 //
mat_diffuse 1                       //
mat_non_hdr_bloom_scalefactor 0     //
mat_bloomscale 0                    // More assurance that bloom stays off
mat_bloom_scalefactor_scalar 0      //
mat_specular 1 						// Controls specularity. Setting this to 0 will make ubers non-shiny, and will remove some specular effects from in-game entities which support it.
mat_fastspecular 1					// Fast specularity.
mat_fastnobump 0                    //
mat_forcemanagedtextureintohardware 0
mat_framebuffercopyoverlaysize 0    //
mat_trilinear 0 					// Sets trlinear mode.
mat_viewportscale 1 				// Almost no performance gain from viewport upscaling.
mat_viewportupscale 1				//
mat_wateroverlaysize 1				// Water overlay size.
mp_decals 9 						// `9' is a good value to still see the spread pattern from a scattergun without any real performance loss. Needs to be changed with r_decals.
r_3dsky 0							// Disables 3D skies. This makes maps like koth_wubwubwub much, much less spectacular, so you need to compromise.
//r_3dnow 0							// Disables 3DNow, but it doesn't take arguments in TF2
r_ambientboost 0					// Controls ambient lights
r_ambientfactor 0					// Controls ambient lights
r_ambientmin 0						// Controls ambient lights
r_avglight 0						// Controls average lighting on objects
r_cheapwaterend 1					// Activates cheap water
r_cheapwaterstart 1					// Activates cheap water
r_decals 9							// Controls decal amount. Needs to be changed with mp_decals.
r_maxmodeldecal 9                   // Controls how many decals can be on a model at once
r_decalstaticprops 0				// Enables whether decals can be seen on props.
r_decal_cullsize 15					// Controls the cull size of decals.
r_drawdetailprops 0					// Controls whether details on props should be drawn at all.
r_drawmodeldecals 0					// Controls whether decals should be seeable on a model.
r_drawflecks 0						// Controls whether particles upon hitting a surface with a bullet should be rendered.
r_dynamic 0							// Disables dynamic lighting.
r_maxdlights 0						// Determines the maximum number of dynamic lights visible on the screen.
r_physpropstaticlighting 0			// Dtermines if there should be static lighting on props
r_occlusion	0						// Disables ambient occlusion
r_worldlights 1                     // Number of world lights to use per vertex. Set to 0 for a theoretical performance gain but very bad lighting effects on characters.
r_flashlightdepthtexture 0			// Specifies how detailed the flashlight light should be. Useless in TF2. 
r_forcewaterleaf 1					// Optimization to water - considers view in leaf under water for purposes of culling.
r_lightaverage 0					// Disables average lighting.
r_dopixelvisibility 0               //
r_maxnewsamples 0					// Undocumented.
r_maxsampledist 1					// Undocumented.
r_sse2 1                            //
r_propsmaxdist 0					// Max visible distance for props.
r_renderoverlayfragment 0			// Leaves a marking underneath health kits and ammo kits.
r_staticprop_lod 10					// Sets the default LOD for static props. Undocumented, so I don't know the limit, but 10 is a good number.
r_waterdrawreflection 0				// Controls as to whether reflections should be drawn on the surface of water.
r_waterdrawrefraction 1				// Setting to 0 makes it so that water looks weird and you can't look into it, but it might have an FPS gain.
r_waterforceexpensive 0				// Forces expensive water.
r_waterforcereflectentities 0		// Forces as to whether entities should be reflected into water even if r_waterdrawreflection is 0.
rope_averagelight 0					// Makes ropes use average of cubemap lighting instead of max intensity.
rope_collide 0						// Collide rope with the world.
rope_rendersolid 1					// Changes rope visibility. Set to 1 since ropes will be used a lot more with Mannpower. Disable for a boost.
rope_shake 0						// Controls whether ropes should shake as if there's wind.
rope_smooth 0						// Controls as to whether there should be an antialiasing effect on ropes.
rope_subdiv 0						// Rope subdivision amount.
rope_wind_dist 0					// If a rope is this far away, don't simulate wind on them.
tf_particles_disable_weather 1 		// Disable weather effects on maps supporting it. For example, setting this to `1' disables rain effects on *_sawmill.
tracer_extra 0						// Undocumented.
violence_ablood 1 					// Setting ablood/hblood to 1 actually improves perf usually
violence_hblood 1					//

// Control antialiasing quality to a better extent
mat_software_aa_quality 0 // was 9
mat_software_aa_strength 0
mat_software_aa_strength_vgui -1
mat_software_aa_blur_one_pixel_lines 0
mat_software_aa_edge_threshold 9
mat_software_aa_tap_offset "1"

//----------------------------------------------------------------------------
// Miscellaneous
// Some miscellaneous improvements that don't quite fit into any of the above categories.
//----------------------------------------------------------------------------

flex_smooth 1
in_usekeyboardsampletime 0
mat_clipz 1 	 // FX card users should set this to 0
mat_forcehardwaresync 0
mat_levelflush 1
m_rawinput 1 	 // Turn on raw mouse input.
mat_vsync 0 	 // Turn off vsync to avoid nasty I/O latency.
r_fastzreject -1 // Values >1 enable a fast Z rejection algorithm, to be performed on the GPU (as opposed to on the CPU). The value `-1' autodetects hardware support for this feature, which is safer than forcing it.
mat_queue_mode 2 // mat_queue mode is another frequently asked about cvar, it
                 // defines the threading method to be used by the material
                 // system. It has been unstable to use in the past, but
                 // nowadays it's generally okay.
                 //
                 // Here are the possible values:
                 //     -2 legacy default
                 //     -1 default
                 //      0 synchronous single thread
                 //      1 queued single thread
                 //      2 queued multithreaded
                 //
                 // If you have problems with the value `2', try setting it to
                 // `-1'.
                 //
                 // As an aside, there are quite a few bugs in the demo system
                 // that occur when mat_queue_mode is set to a value that is
                 // not `-1'. If you intend to do work with the demo system,
                 // maybe you should change this.

cl_threaded_client_leaf_system 0
r_queued_ropes 1
r_queued_post_processing 0
r_threaded_client_shadow_manager 1
r_threaded_particles 1
r_threaded_renderables 1
cl_forcepreload 1								   // Forces preloading sounds and such to make it lag less when in-game.
//mat_viewportupscale 1                            // for terrible GPU's only
//mat_viewportscale 0.5                            // for terrible GPU's only
cl_software_cursor 0       						   // fixes Windows cursor appearing on screen bug, but breaks on Mac/Linux and prevents looking up in some cases when set to 1

//----------------------------------------------------------------------------
// Experimental
// Disable these if you experience crashes
//----------------------------------------------------------------------------

//cl_ejectbrass 0			   	// Disables visual bullet ejection from miniguns. Causes crashes for some clients.
//cl_localnetworkbackdoor 0          // Network optimizations for Singleplayer, disabling has about a 1-2% fps boost
//cl_cloud_settings 0                // Disables cloud syncing of configs, should decrease FPS variance. Disable if you want to.
sys_minidumpspewlines 500            // Basically the number of lines saved to a log file from console. No FPS boost but 15% lower FPS variance
cl_loadondemand_default 0          // Forces items to be loaded at startup instead of on demand. Theoretically makes startup longer but prevents freezing
//ai_expression_optimization 1       // Disables NPC expressions when you can't see them, not sure if it works on regular players in TF2, but that's why it's experimental.
//r_pixelfog 0                     // Apparently changes fog clarity to give a more DX8-ish appearance when set to 1.
//fast_fogvolume 1                   // Undocumented but I didn't experience any FPS loss with it enabled, will run benchmarks later.
//filesystem_native 0                // I think there's an FPS gain with this, anyway.
//host_thread_mode 0                 // Prevents buggy singleplayer, set to 1 for benefits
								   // makes local servers unplayable, so disabled by default
//mod_load_anims_async 1             // Loads model animations async
//mod_load_mesh_async 1              // Load model mesh async
//mod_load_vcollide_async 1          // Load model vcollide async
r_queued_post_processing 1
r_threaded_client_shadow_manager 1
r_threaded_particles 1
r_threaded_renderables 1
net_queue_trace 0
cl_cloud_settings 0 				// Disables Steam Cloud syncing for TF2, helps to keep the config from being saved so you don't contaminate Steam Cloud with it

//----------------------------------------------------------------------------
// Other improvements
// Other non-performance improvements that you may like. Feel free to remove them if you don't, of course.
// Commented all but F8 reload my Doctor McKay's recommendation. Uncomment what you want to use.
//----------------------------------------------------------------------------

// General
//cl_showbattery 1 						 // Indicates if we're on battery power or plugged in. Not useful if you're not using a laptop.
cl_mvm_wave_status_visible_during_wave 1 // Extremely useful convar to show bots remaining without having to view scoreboard
cl_use_tournament_specgui 1				 // Shows your teammate's health in tournament mode and in MvM when you're dead.
cl_ask_blacklist_opt_out 1			 	 // Disables the game annoyingly asking you if you want to blacklist a server that you spend a low amount of time on.
cl_ask_favorite_opt_out 1				 // Disables the game annoyingly asking you if you want to favorite a server that you spend a long amount of time on.
hud_combattext_batching 1				 // Batches together damage text. Useful for Pyro, Heavy, and the Engineer's Sentry in particular.

// General HUD-based improvements
hud_achievement_glowtime 0 // Default is 2.5, not 100% what this is about a 1.5% fps boost.
hud_deathnotice_time 5     // Theoretically might improve FPS?
hud_saytext_time 6


// Disable Tutorials
//cl_ask_blacklist_opt_out "1"
//cl_ask_favorite_opt_out "1"
//sb_dontshow_maxplayer_warning "1"
//tf_explanations_backpackpanel "1"
//tf_explanations_charinfo_armory_panel "1"
//tf_explanations_charinfopanel "1"
//tf_explanations_craftingpanel "1"
//tf_explanations_discardpanel "1"
//tf_explanations_store "1"
//tf_training_has_prompted_for_forums "1"
//tf_training_has_prompted_for_loadout "1"
//tf_training_has_prompted_for_offline_practice "1"
//tf_training_has_prompted_for_options "1"
//tf_training_has_prompted_for_training "1"

// Null-cancelling movement script

//bind w +mfwd
//bind s +mback
//bind a +mleft
//bind d +mright

//alias +mfwd "-back;+forward;alias checkfwd +forward"
//alias +mback "-forward;+back;alias checkback +back"
//alias +mleft "-moveright;+moveleft;alias checkleft +moveleft"
//alias +mright "-moveleft;+moveright;alias checkright +moveright"
//alias -mfwd "-forward;checkback;alias checkfwd none"
//alias -mback "-back;checkfwd;alias checkback none"
//alias -mleft "-moveleft;checkright;alias checkleft none"
//alias -mright "-moveright;checkleft;alias checkright none"
//alias checkfwd none
//alias checkback none
//alias checkleft none
//alias checkright none
//alias none ""

// Toggle viewmodels
//bind "\" "r_drawviewmodel 0 1"

// Reload graphics and sound to fix glitches.
// bind "f8" "record temp; stop; snd_restart; hud_reloadscheme;heartbeat;"

//----------------------------------------------------------------------------
// Modification Support
//----------------------------------------------------------------------------

exec autocontrol
